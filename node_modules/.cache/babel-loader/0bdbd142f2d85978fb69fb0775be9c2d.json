{"ast":null,"code":"var _jsxFileName = \"/home/lewibs/Documents/github/ottery/web-app/src/components/Input.js\",\n    _s = $RefreshSig$();\n\nimport \"../css/Input.css\";\nimport \"../css/colors.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TextInput(_ref) {\n  let {\n    className,\n    name,\n    value,\n    setValue,\n    secure\n  } = _ref;\n  let title = null;\n  let type = \"text\";\n\n  let input = /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"text-area b0\",\n    onChange: e => {\n      setValue(e.target.value);\n    },\n    type: type,\n    value: value,\n    placeholder: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 17\n  }, this);\n\n  if (secure) {\n    type = \"password\";\n  }\n\n  if (value) {\n    title = /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"t3 title\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this);\n    input = /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"text-area b0 shift\",\n      onChange: e => {\n        setValue(e.target.value);\n      },\n      type: type,\n      value: value,\n      placeholder: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-input \" + className,\n    children: [title, input]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TextInput;\n\nfunction OptionInput(_ref2) {\n  let {\n    className,\n    name,\n    value,\n    setValue,\n    options\n  } = _ref2;\n  let title = null;\n  let type = \"text\";\n\n  let input = /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"text-area b0\",\n    onChange: e => {\n      setValue(e.target.value);\n    },\n    type: type,\n    value: value,\n    placeholder: name,\n    list: name + \"s\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 17\n  }, this);\n\n  if (value) {\n    title = /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"t3 title\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this);\n    input = /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"text-area b0 shift\",\n      onChange: e => {\n        setValue(e.target.value);\n      },\n      type: type,\n      value: value,\n      placeholder: name,\n      list: name + \"s\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-input \" + className,\n    children: [title, input, /*#__PURE__*/_jsxDEV(\"datalist\", {\n      id: name + \"s\",\n      children: options.map((state, index) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: state\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 56\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = OptionInput;\n\nfunction DateInput(_ref3) {\n  _s();\n\n  let {\n    className,\n    name,\n    value,\n    setValue\n  } = _ref3;\n\n  const calander = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"t3 title\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"text-area b0 shift\",\n      onChange: e => {\n        setValue(e.target.value);\n      },\n      type: \"date\",\n      placeholder: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true);\n\n  const [display, setDisplay] = useState( /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"text-area b0\",\n    onClick: () => {\n      setDisplay(calander);\n    },\n    onChange: e => {\n      setValue(e.target.value);\n    },\n    type: \"text\",\n    placeholder: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 44\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-input \" + className,\n    children: display\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DateInput, \"3T+LgJzHB/QVEZDH1OKYFcqz2tI=\");\n\n_c3 = DateInput;\nexport { TextInput, OptionInput, DateInput };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TextInput\");\n$RefreshReg$(_c2, \"OptionInput\");\n$RefreshReg$(_c3, \"DateInput\");","map":{"version":3,"sources":["/home/lewibs/Documents/github/ottery/web-app/src/components/Input.js"],"names":["useState","TextInput","className","name","value","setValue","secure","title","type","input","e","target","OptionInput","options","map","state","index","DateInput","calander","display","setDisplay"],"mappings":"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","sourcesContent":["import \"../css/Input.css\";\nimport \"../css/colors.css\";\n\nimport { useState } from \"react\";\n\nfunction TextInput({className, name, value, setValue, secure}) {\n    let title = null;\n    let type = \"text\";\n    let input = <input className=\"text-area b0\" onChange={(e)=>{setValue(e.target.value)}} type={type} value={value} placeholder={name} />;\n\n    if (secure) {\n      type = \"password\";  \n    }\n\n    if (value) {\n        title = <label className=\"t3 title\">{name}</label>;\n        input = <input className=\"text-area b0 shift\" onChange={(e)=>{setValue(e.target.value)}} type={type} value={value} placeholder={name} />;\n    }\n\n    return (\n        <div className={\"text-input \" + className}>\n            {title}\n            {input}\n        </div>\n    );\n}\n\nfunction OptionInput({className, name, value, setValue, options}) {\n    let title = null;\n    let type = \"text\";\n    let input = <input className=\"text-area b0\" onChange={(e)=>{setValue(e.target.value)}} type={type} value={value} placeholder={name} list={name+\"s\"}/>;\n\n    if (value) {\n        title = <label className=\"t3 title\">{name}</label>;\n        input = <input className=\"text-area b0 shift\" onChange={(e)=>{setValue(e.target.value)}} type={type} value={value} placeholder={name} list={name+\"s\"}/>;\n    }\n\n    return (\n        <div className={\"text-input \" + className}>\n            {title}\n            {input}\n            <datalist id={name+\"s\"}>\n                {options.map((state, index) => {return <option key={index} value={state} />})}\n            </datalist>\n        </div>\n    );\n}\n\nfunction DateInput({className, name, value, setValue}) {\n\n    const calander = <>\n                        <label className=\"t3 title\">{name}</label>\n                        <input className=\"text-area b0 shift\" onChange={(e)=>{setValue(e.target.value)}} type=\"date\"  placeholder={name}/>\n                    </>\n\n    const [display, setDisplay] = useState(<input className=\"text-area b0\" onClick={()=>{setDisplay(calander)}} onChange={(e)=>{setValue(e.target.value)}} type=\"text\" placeholder={name} />);\n\n    return (\n        <div className={\"text-input \" + className}>\n            {display}\n        </div>\n    );\n}\n\nexport {\n    TextInput, \n    OptionInput,\n    DateInput\n}"]},"metadata":{},"sourceType":"module"}